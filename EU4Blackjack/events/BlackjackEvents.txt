namespace = blackjack

# Let players join blackjack

country_event = {
	id = blackjack.1
	title = blackjack.1.t
	desc = blackjack.1.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Accept joining the game
	option = {
		name = "blackjack.1a"

		hidden_effect = {

			# Player accepts or rejects game, is let in or game is full
			if = {
				limit = { NOT = { has_saved_global_event_target = blackjack_player_2_tag } }
				ROOT = {
					save_global_event_target_as = blackjack_player_2_tag
					country_event = {
						id = blackjack.2
					}
					set_country_flag = blackjack_is_player
				}
			} else_if = {
				limit = { NOT = { has_saved_global_event_target = blackjack_player_3_tag } }
				ROOT = {
					save_global_event_target_as = blackjack_player_3_tag
					country_event = {
						id = blackjack.2
					}
					set_country_flag = blackjack_is_player
				}
			} else_if = {
				limit = { NOT = { has_saved_global_event_target = blackjack_player_4_tag } }
				ROOT = {
					save_global_event_target_as = blackjack_player_4_tag
					country_event = {
						id = blackjack.2
					}
					set_country_flag = blackjack_is_player
				}
			} else = {
				country_event = {
					id = blackjack.3
				}
				set_country_flag = blackjack_not_playing
			}

			# If every player has either accepted or rejected the decision, its time to pass it off to the AI
			if = {
				limit = { blackjack_all_player_nations_accepted_or_rejected = yes }
				assign_blackjack_ais = yes
			}
		}
	}

	# Reject joining the game
	option = {
		name = "blackjack.1b"
		hidden_effect = {
			set_country_flag = blackjack_not_playing
			# If every player has either accepted or rejected the decision, its time to pass it off to the AI
			if = {
				limit = { blackjack_all_player_nations_accepted_or_rejected = yes }
				assign_blackjack_ais = yes
			}
		}
	}
}

# You have been added to the game
country_event = {
	id = blackjack.2
	title = blackjack.2.t
	desc = blackjack.2.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.2a"
	}
}

# Game is full, try again later
country_event = {
	id = blackjack.3
	title = blackjack.3.t
	desc = blackjack.3.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.3a"
	}
}

# Inform p1 that we are searching for players
country_event = {
	id = blackjack.4
	title = blackjack.4.t
	desc = blackjack.4.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.4a"
	}
}

# Debug event for card shuffle
country_event = {
	id = blackjack.5
	title = blackjack.5.t
	desc = blackjack.5.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.5a"
	}
}

# Non custom gui game state event
country_event = {
	id = blackjack.6
	title = blackjack.6.t
	desc = blackjack.6.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Refresh
	option = {
		name = "blackjack.6a"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.16
				}
			}
		}
		trigger = {
			NOT = {
				ai = yes
			}
		}
	}

	# Close
	option = {
		name = "blackjack.6b"
	}
}

# place bet p1 event
country_event = {
	id = blackjack.7
	title = blackjack.7.t
	desc = blackjack.7.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				if = {
					limit = {
						check_variable = {
							which = bet_value_p1
							value = 5001
						}
					}
					set_variable = {
						which = bet_value_p1
						value = 5000
					}
				}
			}
		}
	}

	# Confirm
	option = {
		name = "blackjack.7a"
		highlight = yes
		hidden_effect = {
			set_global_flag = blackjack_p1_has_bet
			
			# Check and end betting
			if = {
				limit = { 
					AND = {
						has_global_flag = blackjack_p1_has_bet
						has_global_flag = blackjack_p2_has_bet
						has_global_flag = blackjack_p3_has_bet
						has_global_flag = blackjack_p4_has_bet
					}
				}
				clr_global_flag = blackjack_p1_has_bet
				clr_global_flag = blackjack_p2_has_bet
				clr_global_flag = blackjack_p3_has_bet
				clr_global_flag = blackjack_p4_has_bet
				set_global_flag = blackjack_see_gamestate_enabled
		
				# Compute hand totals
				blackjack_compute_hand_values = yes
		
				# Check if players have blackjack and set their status accordingly
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							blackjack_player_1_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_1_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_2_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_2_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_3_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_3_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_4_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_4_status
							value = 4
						}
					}
				}
		
				# Give game event to all players
				event_target:blackjack_player_1_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_2_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_3_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_4_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
		
				# Compute optimal moves
				blackjack_player_1_optimal_move = yes
				blackjack_player_2_optimal_move = yes
				blackjack_player_3_optimal_move = yes
				blackjack_player_4_optimal_move = yes
		
				# Give options event to first non-blackjack player
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_1_status
									value = 4
								}
							}
						}
						country_event = {
							id = blackjack.15
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_2_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 2
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_3_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 3
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_4_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 4
						}
						country_event = {
							id = blackjack.17
						}
					}
					# Every single player has blackjack
					# Move on to evaluate dealer
					else = {
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
				}
			}
		}
	}

	# Add 1
	option = {
		name = "blackjack.7b"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 1
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 5
	option = {
		name = "blackjack.7c"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 5
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 10
	option = {
		name = "blackjack.7d"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 10
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 50
	option = {
		name = "blackjack.7e"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 50
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 100
	option = {
		name = "blackjack.7f"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 100
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 500
	option = {
		name = "blackjack.7g"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 500
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Add 1000
	option = {
		name = "blackjack.7h"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p1
					value = 1000
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}

	# Set to max
	option = {
		name = "blackjack.7i"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p1
					value = 5000
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}
	
	# Reset
	option = {
		name = "blackjack.7j"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p1
					value = 5
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.11
				}
			}
		}
	}
}

# Non custom place bet p2 event
country_event = {
	id = blackjack.8
	title = blackjack.8.t
	desc = blackjack.8.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				if = {
					limit = {
						check_variable = {
							which = bet_value_p2
							value = 5001
						}
					}
					set_variable = {
						which = bet_value_p2
						value = 5000
					}
				}	
			}
		}
	}

	# Confirm
	option = {
		name = "blackjack.8a"
		highlight = yes
		hidden_effect = {
			set_global_flag = blackjack_p2_has_bet
			
			# Check and end betting
			if = {
				limit = { 
					AND = {
						has_global_flag = blackjack_p1_has_bet
						has_global_flag = blackjack_p2_has_bet
						has_global_flag = blackjack_p3_has_bet
						has_global_flag = blackjack_p4_has_bet
					}
				}
				clr_global_flag = blackjack_p1_has_bet
				clr_global_flag = blackjack_p2_has_bet
				clr_global_flag = blackjack_p3_has_bet
				clr_global_flag = blackjack_p4_has_bet
				set_global_flag = blackjack_see_gamestate_enabled
		
				# Compute hand totals
				blackjack_compute_hand_values = yes
		
				# Check if players have blackjack and set their status accordingly
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							blackjack_player_1_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_1_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_2_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_2_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_3_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_3_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_4_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_4_status
							value = 4
						}
					}
				}
		
				# Give game event to all players
				event_target:blackjack_player_1_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_2_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_3_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_4_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
		
				# Compute optimal moves
				blackjack_player_1_optimal_move = yes
				blackjack_player_2_optimal_move = yes
				blackjack_player_3_optimal_move = yes
				blackjack_player_4_optimal_move = yes
		
				# Give options event to first non-blackjack player
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_1_status
									value = 4
								}
							}
						}
						country_event = {
							id = blackjack.15
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_2_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 2
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_3_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 3
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_4_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 4
						}
						country_event = {
							id = blackjack.17
						}
					}
					# Every single player has blackjack
					# Move on to evaluate dealer
					else = {
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
				}
			}
		}
	}

	# Add 1
	option = {
		name = "blackjack.8b"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 1
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 5
	option = {
		name = "blackjack.8c"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 5
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 10
	option = {
		name = "blackjack.8d"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 10
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 50
	option = {
		name = "blackjack.8e"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 50
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 100
	option = {
		name = "blackjack.8f"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 100
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 500
	option = {
		name = "blackjack.8g"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 500
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Add 1000
	option = {
		name = "blackjack.8h"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p2
					value = 1000
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}

	# Set to max
	option = {
		name = "blackjack.7i"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p2
					value = 5000
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}
	
	# Reset
	option = {
		name = "blackjack.8j"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p2
					value = 5
				}
			}
			event_target:blackjack_player_2_tag = {
				country_event = {
					id = blackjack.12
				}
			}
		}
	}
}

# Non custom place bet p3 event
country_event = {
	id = blackjack.9
	title = blackjack.9.t
	desc = blackjack.9.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				if = {
					limit = {
						check_variable = {
							which = bet_value_p3
							value = 5001
						}
					}
					set_variable = {
						which = bet_value_p3
						value = 5000
					}
				}
			}
		}
	}

	# Confirm
	option = {
		name = "blackjack.9a"
		highlight = yes
		hidden_effect = {
			set_global_flag = blackjack_p3_has_bet

			# Check and end betting
			if = {
				limit = { 
					AND = {
						has_global_flag = blackjack_p1_has_bet
						has_global_flag = blackjack_p2_has_bet
						has_global_flag = blackjack_p3_has_bet
						has_global_flag = blackjack_p4_has_bet
					}
				}
				clr_global_flag = blackjack_p1_has_bet
				clr_global_flag = blackjack_p2_has_bet
				clr_global_flag = blackjack_p3_has_bet
				clr_global_flag = blackjack_p4_has_bet
				set_global_flag = blackjack_see_gamestate_enabled
		
				# Compute hand totals
				blackjack_compute_hand_values = yes
		
				# Check if players have blackjack and set their status accordingly
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							blackjack_player_1_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_1_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_2_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_2_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_3_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_3_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_4_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_4_status
							value = 4
						}
					}
				}
		
				# Give game event to all players
				event_target:blackjack_player_1_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_2_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_3_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_4_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
		
				# Compute optimal moves
				blackjack_player_1_optimal_move = yes
				blackjack_player_2_optimal_move = yes
				blackjack_player_3_optimal_move = yes
				blackjack_player_4_optimal_move = yes
		
				# Give options event to first non-blackjack player
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_1_status
									value = 4
								}
							}
						}
						country_event = {
							id = blackjack.15
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_2_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 2
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_3_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 3
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_4_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 4
						}
						country_event = {
							id = blackjack.17
						}
					}
					# Every single player has blackjack
					# Move on to evaluate dealer
					else = {
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
				}
			}
		}
	}

	# Add 1
	option = {
		name = "blackjack.9b"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 1
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 5
	option = {
		name = "blackjack.9c"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 5
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 10
	option = {
		name = "blackjack.9d"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 10
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 50
	option = {
		name = "blackjack.9e"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 50
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 100
	option = {
		name = "blackjack.9f"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 100
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 500
	option = {
		name = "blackjack.9g"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 500
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Add 1000
	option = {
		name = "blackjack.9h"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p3
					value = 1000
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}

	# Set to max
	option = {
		name = "blackjack.7i"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p3
					value = 5000
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}
	
	# Reset
	option = {
		name = "blackjack.9j"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p3
					value = 5
				}
			}
			event_target:blackjack_player_3_tag = {
				country_event = {
					id = blackjack.13
				}
			}
		}
	}
}

# Non custom place bet p4 event
country_event = {
	id = blackjack.10
	title = blackjack.10.t
	desc = blackjack.10.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				if = {
					limit = {
						check_variable = {
							which = bet_value_p4
							value = 5001
						}
					}
					set_variable = {
						which = bet_value_p4
						value = 5000
					}
				}
			}
		}
	}

	# Confirm
	option = {
		name = "blackjack.10a"
		highlight = yes
		hidden_effect = {
			set_global_flag = blackjack_p4_has_bet
			
			# Check and end betting
			if = {
				limit = { 
					AND = {
						has_global_flag = blackjack_p1_has_bet
						has_global_flag = blackjack_p2_has_bet
						has_global_flag = blackjack_p3_has_bet
						has_global_flag = blackjack_p4_has_bet
					}
				}
				clr_global_flag = blackjack_p1_has_bet
				clr_global_flag = blackjack_p2_has_bet
				clr_global_flag = blackjack_p3_has_bet
				clr_global_flag = blackjack_p4_has_bet
				set_global_flag = blackjack_see_gamestate_enabled
		
				# Compute hand totals
				blackjack_compute_hand_values = yes
		
				# Check if players have blackjack and set their status accordingly
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							blackjack_player_1_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_1_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_2_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_2_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_3_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_3_status
							value = 4
						}
					}
					if = {
						limit = {
							blackjack_player_4_has_blackjack = yes
						}
						set_variable = {
							which = blackjack_player_4_status
							value = 4
						}
					}
				}
		
				# Give game event to all players
				event_target:blackjack_player_1_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_2_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_3_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
				event_target:blackjack_player_4_tag = {
					# country_event = {
					# 	id = blackjack.6
					# }
					country_event = {
						id = blackjack_gui.1
					}
				}
		
				# Compute optimal moves
				blackjack_player_1_optimal_move = yes
				blackjack_player_2_optimal_move = yes
				blackjack_player_3_optimal_move = yes
				blackjack_player_4_optimal_move = yes
		
				# Give options event to first non-blackjack player
				event_target:blackjack_player_1_tag = {
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_1_status
									value = 4
								}
							}
						}
						country_event = {
							id = blackjack.15
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_2_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 2
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_3_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 3
						}
						country_event = {
							id = blackjack.17
						}
					} else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_player_4_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_turn
							value = 4
						}
						country_event = {
							id = blackjack.17
						}
					}
					# Every single player has blackjack
					# Move on to evaluate dealer
					else = {
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
				}
			}
		}
	}

	# Add 1
	option = {
		name = "blackjack.10b"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 1
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 5
	option = {
		name = "blackjack.10c"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 5
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 10
	option = {
		name = "blackjack.10d"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 10
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 50
	option = {
		name = "blackjack.10e"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 50
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 100
	option = {
		name = "blackjack.10f"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 100
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 500
	option = {
		name = "blackjack.10g"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 500
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Add 1000
	option = {
		name = "blackjack.10h"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				change_variable = {
					which = bet_value_p4
					value = 1000
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}

	# Set to max
	option = {
		name = "blackjack.7i"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p4
					value = 5000
				}
			}
			event_target:blackjack_player_1_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}
	
	# Reset
	option = {
		name = "blackjack.10j"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				set_variable = {
					which = bet_value_p4
					value = 5
				}
			}
			event_target:blackjack_player_4_tag = {
				country_event = {
					id = blackjack.14
				}
			}
		}
	}
}

# Back to betting menu events
country_event = {
	id = blackjack.11
	title = blackjack.11.t
	desc = blackjack.11.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = blackjack.11a
		event_target:blackjack_player_1_tag = {
			country_event = {
				id = blackjack.7
			}
		}
	}
}

country_event = {
	id = blackjack.12
	title = blackjack.12.t
	desc = blackjack.12.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = blackjack.12a
		event_target:blackjack_player_2_tag = {
			country_event = {
				id = blackjack.8
			}
		}
	}
}

country_event = {
	id = blackjack.13
	title = blackjack.13.t
	desc = blackjack.13.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = blackjack.13a
		event_target:blackjack_player_3_tag = {
			country_event = {
				id = blackjack.9
			}
		}
	}
}

country_event = {
	id = blackjack.14
	title = blackjack.14.t
	desc = blackjack.14.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = blackjack.14a
		event_target:blackjack_player_4_tag = {
			country_event = {
				id = blackjack.10
			}
		}
	}
}

# Options event when it is your turn
country_event = {
	id = blackjack.15
	title = blackjack.15.t
	desc = blackjack.15.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Go cry about it AI
	# option = {
	# 	name = "blackjack.15z"
	# 	trigger = {
	# 		ai = yes
	# 	}
	# 	hidden_effect = {
	# 		ROOT = {
	# 			country_event = {
	# 				id = blackjack.17
	# 			}
	# 		}
	# 	}
	# 	ai_chance = {
	# 		factor = 0
	# 	}
	# }

	# Hit
	option = {
		name = "blackjack.15a"
		hidden_effect = {
			log = "Player [blackjack_player_1_tag.blackjack_turn.GetValue] who is [Root.GetName] just hit!"
			#blackjack_hit = yes
			# The effect doesn't work because ???? but it works if i paste the contents here and look im so done with this im just giving up
			event_target:blackjack_player_1_tag = {
				blackjack_save_previous_move_hit = yes
				# Fetch next card and store into export_variable
				blackjack_play_and_inc = yes
		
				# Play next card for whichever player hit
				if = {
					# Player 4's turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 4
						}
					}
					blackjack_player_4_play_card = yes
					change_variable = {
						which = blackjack_player_4_position
						value = 1
					}
				} else_if = {
					# Player 3 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 3
						}
					}
					blackjack_player_3_play_card = yes
					change_variable = {
						which = blackjack_player_3_position
						value = 1
					}
				} else_if = {
					# Player 2 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 2
						}
					}
					blackjack_player_2_play_card = yes
					change_variable = {
						which = blackjack_player_2_position
						value = 1
					}
				} else = {
					# Player 1 turn
					blackjack_player_1_play_card = yes
					change_variable = {
						which = blackjack_player_1_position
						value = 1
					}
				}
		
				event_target:blackjack_player_1_tag = {
					# Recompute player values
					# Sure you only technically need to recompute it for the one player but i cba
					blackjack_compute_hand_values = yes
					
					# If the player hit, make sure to check the status and set to bustedblackjack_p1_has_bet if > 21 or stood if == 21
					if = {
						limit = {
							OR = {
								# Player 1's turn, status is either 0 or 1
								AND = {
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_1_status
											value = 2
										}
									}
								}
								# Player 2's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_2_status
											value = 2
										}
									}
								}
								# Player 3's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_3_status
											value = 2
										}
									}
								}
								# Player 1's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
									NOT = {
										check_variable = {
											which = blackjack_player_4_status
											value = 2
										}
									}
								}
							}
						}
			
						# The player is either playing or stood
						# This means we need to check for auto-bust or auto-stand
						
						# auto-bust
						if = {
							limit = {
								blackjack_player_busted = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 2
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 2
								}
							}
						}
			
						# auto-stand
						if = {
							limit = {
								blackjack_player_stood = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 1
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 1
								}
							}
						}
					}
			
					# If all players status isn't 0, end the game
					if = {
						limit = {
							blackjack_game_over = yes
						}
						# Dealer Processing event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
					
					# Else navigate to the next player who's status is 0 and send them the turn event (id 17). Can repeat if other 3 are done. update the turn variable accordingly
					else = {
						# Use a while loop to find the next turn
						set_global_flag = blackjack_next_turn_while_loop_flag # Shut up cwtools shut up please shut up please please
						clr_global_flag = blackjack_next_turn_while_loop_flag
			
						while = {
							limit = {
								NOT = { has_global_flag = blackjack_next_turn_while_loop_flag }
							}
							# Increment turn and if it becomes 5, reset to 1
							change_variable = {
								which = blackjack_turn
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 5
									}
								}
								set_variable = {
									which = blackjack_turn
									value = 1
								}
							}
							# Check if the player corresponding to this turn has a status of 0
							if = {
								limit = {
									OR = {
										# player 1 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_1_status
													value = 1
												}
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 2
												}
											}
										}
										# player 2 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_2_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 2
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 3
												}
											}
										}
										# player 3 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_3_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 3
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 4
												}
											}
										}
										# player 4 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_4_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 4
											}
										}
									}
								}
								set_global_flag = blackjack_next_turn_while_loop_flag
							}
						}
						clr_global_flag = blackjack_next_turn_while_loop_flag

						# Fire the helper event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.17
							}
						}
					}
				}
			}
		}
		# Optimal AI
		# ai_chance = {
		# 	factor = 100
		# 	modifier = {
		# 		factor = 0
		# 		OR = {
		# 			blackjack_optimal_move_stand = yes
		# 			blackjack_optimal_move_double_down = yes
		# 			blackjack_optimal_move_surrender = yes
		# 		}
		# 	}
		# }

		# Standard AI
		ai_chance = {
			factor = 1

			# Optimal move is hit
			modifier = {
				factor = 70
				blackjack_optimal_move_hit = yes
			}

			# Optimal move stand
			modifier = {
				factor = 10
				blackjack_optimal_move_stand = yes
			}

			# Optimal move double down
			modifier = {
				factor = 18
				blackjack_optimal_move_double_down = yes
			}

			# Optimal move surrender
			modifier = {
				factor = 9
				blackjack_optimal_move_surrender = yes
			}
		}
	}

	# Stand
	option = {
		name = "blackjack.15b"
		hidden_effect = {
			log = "Player [blackjack_player_1_tag.blackjack_turn.GetValue] who is [Root.GetName] just stood!"
			event_target:blackjack_player_1_tag = {
				blackjack_save_previous_move_stand = yes
				# Set status to stood
				if = {
					# Player 4's turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 4
						}
					}
					set_variable = {
						which = blackjack_player_4_status
						value = 1
					}
				} else_if = {
					# Player 3 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 3
						}
					}
					set_variable = {
						which = blackjack_player_3_status
						value = 1
					}
				} else_if = {
					# Player 2 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 2
						}
					}
					set_variable = {
						which = blackjack_player_2_status
						value = 1
					}
				} else = {
					set_variable = {
						which = blackjack_player_1_status
						value = 1
					}
				}
				
				# Then advance turn
				event_target:blackjack_player_1_tag = {
					# Recompute player values
					# Sure you only technically need to recompute it for the one player but i cba
					blackjack_compute_hand_values = yes
					
					# If the player hit, make sure to check the status and set to bustedblackjack_p1_has_bet if > 21 or stood if == 21
					if = {
						limit = {
							OR = {
								# Player 1's turn, status is either 0 or 1
								AND = {
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_1_status
											value = 2
										}
									}
								}
								# Player 2's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_2_status
											value = 2
										}
									}
								}
								# Player 3's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_3_status
											value = 2
										}
									}
								}
								# Player 1's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
									NOT = {
										check_variable = {
											which = blackjack_player_4_status
											value = 2
										}
									}
								}
							}
						}
			
						# The player is either playing or stood
						# This means we need to check for auto-bust or auto-stand
						
						# auto-bust
						if = {
							limit = {
								blackjack_player_busted = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 2
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 2
								}
							}
						}
			
						# auto-stand
						if = {
							limit = {
								blackjack_player_stood = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 1
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 1
								}
							}
						}
					}
			
					# If all players status isn't 0, end the game
					if = {
						limit = {
							blackjack_game_over = yes
						}
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
					
					# Else navigate to the next player who's status is 0 and send them the turn event (id 17). Can repeat if other 3 are done. update the turn variable accordingly
					else = {
						# Use a while loop to find the next turn
						set_global_flag = blackjack_next_turn_while_loop_flag # Shut up cwtools shut up please shut up please please
						clr_global_flag = blackjack_next_turn_while_loop_flag
			
						while = {
							limit = {
								NOT = { has_global_flag = blackjack_next_turn_while_loop_flag }
							}
							# Increment turn and if it becomes 5, reset to 1
							change_variable = {
								which = blackjack_turn
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 5
									}
								}
								set_variable = {
									which = blackjack_turn
									value = 1
								}
							}
							# Check if the player corresponding to this turn has a status of 0
							if = {
								limit = {
									OR = {
										# player 1 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_1_status
													value = 1
												}
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 2
												}
											}
										}
										# player 2 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_2_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 2
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 3
												}
											}
										}
										# player 3 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_3_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 3
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 4
												}
											}
										}
										# player 4 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_4_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 4
											}
										}
									}
								}
								set_global_flag = blackjack_next_turn_while_loop_flag
							}
						}
						clr_global_flag = blackjack_next_turn_while_loop_flag
			
						# Fire the helper event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.17
							}
						}
					}
				}
			}
		}
		# Optimal AI
		# ai_chance = {
		# 	factor = 100
		# 	modifier = {
		# 		factor = 0
		# 		OR = {
		# 			blackjack_optimal_move_hit = yes
		# 			blackjack_optimal_move_double_down = yes
		# 			blackjack_optimal_move_surrender = yes
		# 		}
		# 	}
		# }

		# Standard AI
		ai_chance = {
			factor = 1

			# Optimal move stand
			modifier = {
				factor = 80
				blackjack_optimal_move_stand = yes
			}

			# Optimal move is hit
			modifier = {
				factor = 9
				blackjack_optimal_move_hit = yes
			}

			# Optimal move double down
			modifier = {
				factor = 1
				blackjack_optimal_move_double_down = yes
			}

			# Optimal move surrender
			modifier = {
				factor = 20
				blackjack_optimal_move_surrender = yes
			}
		}
	}

	# Double Down
	option = {
		name = "blackjack.15c"
		hidden_effect = {
			log = "Player [blackjack_player_1_tag.blackjack_turn.GetValue] who is [Root.GetName] just doubled down!"
			event_target:blackjack_player_1_tag = {
				blackjack_save_previous_move_double_down = yes
				# Double bet and set status to stood
				if = {
					# Player 4's turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 4
						}
					}
					set_variable = {
						which = blackjack_player_4_status
						value = 1
					}
					multiply_variable = {
						which = bet_value_p4
						value = 2
					}
				} else_if = {
					# Player 3 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 3
						}
					}
					set_variable = {
						which = blackjack_player_3_status
						value = 1
					}
					multiply_variable = {
						which = bet_value_p3
						value = 2
					}
				} else_if = {
					# Player 2 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 2
						}
					}
					set_variable = {
						which = blackjack_player_2_status
						value = 1
					}
					multiply_variable = {
						which = bet_value_p2
						value = 2
					}
				} else = {
					set_variable = {
						which = blackjack_player_1_status
						value = 1
					}
					multiply_variable = {
						which = bet_value_p1
						value = 2
					}
				}
				
				# Then just hit like normal
				event_target:blackjack_player_1_tag = {
					# Fetch next card and store into export_variable
					blackjack_play_and_inc = yes
			
					# Play next card for whichever player hit
					if = {
						# Player 4's turn
						limit = {
							check_variable = {
								which = blackjack_turn
								value = 4
							}
						}
						blackjack_player_4_play_card = yes
						change_variable = {
							which = blackjack_player_4_position
							value = 1
						}
					} else_if = {
						# Player 3 turn
						limit = {
							check_variable = {
								which = blackjack_turn
								value = 3
							}
						}
						blackjack_player_3_play_card = yes
						change_variable = {
							which = blackjack_player_3_position
							value = 1
						}
					} else_if = {
						# Player 2 turn
						limit = {
							check_variable = {
								which = blackjack_turn
								value = 2
							}
						}
						blackjack_player_2_play_card = yes
						change_variable = {
							which = blackjack_player_2_position
							value = 1
						}
					} else = {
						# Player 1 turn
						blackjack_player_1_play_card = yes
						change_variable = {
							which = blackjack_player_1_position
							value = 1
						}
					}
			
					event_target:blackjack_player_1_tag = {
						# Recompute player values
						# Sure you only technically need to recompute it for the one player but i cba
						blackjack_compute_hand_values = yes
						
						# If the player hit, make sure to check the status and set to bustedblackjack_p1_has_bet if > 21 or stood if == 21
						if = {
							limit = {
								OR = {
									# Player 1's turn, status is either 0 or 1
									AND = {
										NOT = {
											check_variable = {
												which = blackjack_turn
												value = 2
											}
										}
										NOT = {
											check_variable = {
												which = blackjack_player_1_status
												value = 2
											}
										}
									}
									# Player 2's turn, status is either 0 or 1
									AND = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
										NOT = {
											check_variable = {
												which = blackjack_turn
												value = 3
											}
										}
										NOT = {
											check_variable = {
												which = blackjack_player_2_status
												value = 2
											}
										}
									}
									# Player 3's turn, status is either 0 or 1
									AND = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
										NOT = {
											check_variable = {
												which = blackjack_turn
												value = 4
											}
										}
										NOT = {
											check_variable = {
												which = blackjack_player_3_status
												value = 2
											}
										}
									}
									# Player 1's turn, status is either 0 or 1
									AND = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
										NOT = {
											check_variable = {
												which = blackjack_player_4_status
												value = 2
											}
										}
									}
								}
							}
				
							# The player is either playing or stood
							# This means we need to check for auto-bust or auto-stand
							
							# auto-bust
							if = {
								limit = {
									blackjack_player_busted = yes
								}
								# See who's turn it is and assign them bust
								if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
									}
									set_variable = {
										which = blackjack_player_4_status
										value = 2
									}
								} else_if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
									}
									set_variable = {
										which = blackjack_player_3_status
										value = 2
									}
								} else_if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
									}
									set_variable = {
										which = blackjack_player_2_status
										value = 2
									}
								} else = {
									set_variable = {
										which = blackjack_player_1_status
										value = 2
									}
								}
							}
				
							# auto-stand
							if = {
								limit = {
									blackjack_player_stood = yes
								}
								# See who's turn it is and assign them bust
								if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
									}
									set_variable = {
										which = blackjack_player_4_status
										value = 1
									}
								} else_if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
									}
									set_variable = {
										which = blackjack_player_3_status
										value = 1
									}
								} else_if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
									}
									set_variable = {
										which = blackjack_player_2_status
										value = 1
									}
								} else = {
									set_variable = {
										which = blackjack_player_1_status
										value = 1
									}
								}
							}
						}
				
						# If all players status isn't 0, end the game
						if = {
							limit = {
								blackjack_game_over = yes
							}
							# Dealer Processing Event
							event_target:blackjack_player_1_tag = {
								country_event = {
									id = blackjack.18
								}
							}
						}
						
						# Else navigate to the next player who's status is 0 and send them the turn event (id 17). Can repeat if other 3 are done. update the turn variable accordingly
						else = {
							# Use a while loop to find the next turn
							set_global_flag = blackjack_next_turn_while_loop_flag # Shut up cwtools shut up please shut up please please
							clr_global_flag = blackjack_next_turn_while_loop_flag
				
							while = {
								limit = {
									NOT = { has_global_flag = blackjack_next_turn_while_loop_flag }
								}
								# Increment turn and if it becomes 5, reset to 1
								change_variable = {
									which = blackjack_turn
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = blackjack_turn
											value = 5
										}
									}
									set_variable = {
										which = blackjack_turn
										value = 1
									}
								}
								# Check if the player corresponding to this turn has a status of 0
								if = {
									limit = {
										OR = {
											# player 1 turn, status of 0
											AND = {
												NOT = {
													check_variable = {
														which = blackjack_player_1_status
														value = 1
													}
												}
												NOT = {
													check_variable = {
														which = blackjack_turn
														value = 2
													}
												}
											}
											# player 2 turn, status of 0
											AND = {
												NOT = {
													check_variable = {
														which = blackjack_player_2_status
														value = 1
													}
												}
												check_variable = {
													which = blackjack_turn
													value = 2
												}
												NOT = {
													check_variable = {
														which = blackjack_turn
														value = 3
													}
												}
											}
											# player 3 turn, status of 0
											AND = {
												NOT = {
													check_variable = {
														which = blackjack_player_3_status
														value = 1
													}
												}
												check_variable = {
													which = blackjack_turn
													value = 3
												}
												NOT = {
													check_variable = {
														which = blackjack_turn
														value = 4
													}
												}
											}
											# player 4 turn, status of 0
											AND = {
												NOT = {
													check_variable = {
														which = blackjack_player_4_status
														value = 1
													}
												}
												check_variable = {
													which = blackjack_turn
													value = 4
												}
											}
										}
									}
									set_global_flag = blackjack_next_turn_while_loop_flag
								}
							}
							clr_global_flag = blackjack_next_turn_while_loop_flag
				
							# Fire the helper event
							event_target:blackjack_player_1_tag = {
								country_event = {
									id = blackjack.17
								}
							}
						}
					}
				}
			}
		}
		# Optimal AI
		# ai_chance = {
		# 	factor = 100
		# 	modifier = {
		# 		factor = 0
		# 		OR = {
		# 			blackjack_optimal_move_hit = yes
		# 			blackjack_optimal_move_stand = yes
		# 			blackjack_optimal_move_surrender = yes
		# 		}
		# 	}
		# }

		# Standard AI
		ai_chance = {
			factor = 1

			# Optimal move stand
			modifier = {
				factor = 9
				blackjack_optimal_move_stand = yes
			}

			# Optimal move is hit
			modifier = {
				factor = 20
				blackjack_optimal_move_hit = yes
			}

			# Optimal move double down
			modifier = {
				factor = 80
				blackjack_optimal_move_double_down = yes
			}

			# Optimal move surrender
			modifier = {
				factor = 1
				blackjack_optimal_move_surrender = yes
			}
		}
	}

	# Surrender
	option = {
		name = "blackjack.15d"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				log = "Player [blackjack_player_1_tag.blackjack_turn.GetValue] who is [Root.GetName] just surrendered!"
				blackjack_save_previous_move_surrender = yes
				# Halve the bet and set status to surrendered
				if = {
					# Player 4's turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 4
						}
					}
					set_variable = {
						which = blackjack_player_4_status
						value = 3
					}
					divide_variable = {
						which = bet_value_p4
						value = 2
					}
				} else_if = {
					# Player 3 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 3
						}
					}
					set_variable = {
						which = blackjack_player_3_status
						value = 3
					}
					divide_variable = {
						which = bet_value_p3
						value = 2
					}
				} else_if = {
					# Player 2 turn
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 2
						}
					}
					set_variable = {
						which = blackjack_player_2_status
						value = 3
					}
					divide_variable = {
						which = bet_value_p2
						value = 2
					}
				} else = {
					set_variable = {
						which = blackjack_player_1_status
						value = 3
					}
					divide_variable = {
						which = bet_value_p1
						value = 2
					}
				}
				
				# Then advance turn
				event_target:blackjack_player_1_tag = {
					# Recompute player values
					# Sure you only technically need to recompute it for the one player but i cba
					blackjack_compute_hand_values = yes
					
					# If the player hit, make sure to check the status and set to bustedblackjack_p1_has_bet if > 21 or stood if == 21
					if = {
						limit = {
							OR = {
								# Player 1's turn, status is either 0 or 1
								AND = {
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 2
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_1_status
											value = 2
										}
									}
								}
								# Player 2's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 3
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_2_status
											value = 2
										}
									}
								}
								# Player 3's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
									NOT = {
										check_variable = {
											which = blackjack_turn
											value = 4
										}
									}
									NOT = {
										check_variable = {
											which = blackjack_player_3_status
											value = 2
										}
									}
								}
								# Player 1's turn, status is either 0 or 1
								AND = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
									NOT = {
										check_variable = {
											which = blackjack_player_4_status
											value = 2
										}
									}
								}
							}
						}
			
						# The player is either playing or stood
						# This means we need to check for auto-bust or auto-stand
						
						# auto-bust
						if = {
							limit = {
								blackjack_player_busted = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 2
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 2
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 2
								}
							}
						}
			
						# auto-stand
						if = {
							limit = {
								blackjack_player_stood = yes
							}
							# See who's turn it is and assign them bust
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 4
									}
								}
								set_variable = {
									which = blackjack_player_4_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 3
									}
								}
								set_variable = {
									which = blackjack_player_3_status
									value = 1
								}
							} else_if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 2
									}
								}
								set_variable = {
									which = blackjack_player_2_status
									value = 1
								}
							} else = {
								set_variable = {
									which = blackjack_player_1_status
									value = 1
								}
							}
						}
					}
			
					# If all players status isn't 0, end the game
					if = {
						limit = {
							blackjack_game_over = yes
						}
						# Dealer Processing Event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.18
							}
						}
					}
					
					# Else navigate to the next player who's status is 0 and send them the turn event (id 17). Can repeat if other 3 are done. update the turn variable accordingly
					else = {
						# Use a while loop to find the next turn
						set_global_flag = blackjack_next_turn_while_loop_flag # Shut up cwtools shut up please shut up please please
						clr_global_flag = blackjack_next_turn_while_loop_flag
			
						while = {
							limit = {
								NOT = { has_global_flag = blackjack_next_turn_while_loop_flag }
							}
							# Increment turn and if it becomes 5, reset to 1
							change_variable = {
								which = blackjack_turn
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = blackjack_turn
										value = 5
									}
								}
								set_variable = {
									which = blackjack_turn
									value = 1
								}
							}
							# Check if the player corresponding to this turn has a status of 0
							if = {
								limit = {
									OR = {
										# player 1 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_1_status
													value = 1
												}
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 2
												}
											}
										}
										# player 2 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_2_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 2
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 3
												}
											}
										}
										# player 3 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_3_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 3
											}
											NOT = {
												check_variable = {
													which = blackjack_turn
													value = 4
												}
											}
										}
										# player 4 turn, status of 0
										AND = {
											NOT = {
												check_variable = {
													which = blackjack_player_4_status
													value = 1
												}
											}
											check_variable = {
												which = blackjack_turn
												value = 4
											}
										}
									}
								}
								set_global_flag = blackjack_next_turn_while_loop_flag
							}
						}
						clr_global_flag = blackjack_next_turn_while_loop_flag
			
						# Fire the helper event
						event_target:blackjack_player_1_tag = {
							country_event = {
								id = blackjack.17
							}
						}
					}
				}
			}
		}
		# Optimal AI
		# ai_chance = {
		# 	factor = 100
		# 	modifier = {
		# 		factor = 0
		# 		OR = {
		# 			blackjack_optimal_move_hit = yes
		# 			blackjack_optimal_move_stand = yes
		# 			blackjack_optimal_move_double_down = yes
		# 		}
		# 	}
		# }

		# Standard AI
		ai_chance = {
			factor = 1

			# Optimal move stand
			modifier = {
				factor = 1
				blackjack_optimal_move_stand = yes
			}

			# Optimal move is hit
			modifier = {
				factor = 1
				blackjack_optimal_move_hit = yes
			}

			# Optimal move double down
			modifier = {
				factor = 1
				blackjack_optimal_move_double_down = yes
			}

			# Optimal move surrender
			modifier = {
				factor = 70
				blackjack_optimal_move_surrender = yes
			}
		}
	}
}

# Refresh game screen hidden event
country_event = {
	id = blackjack.16
	title = blackjack.16.t
	desc = blackjack.16.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = blackjack.16a
		ROOT = {
			country_event = {
				id = blackjack.6
			}
		}
	}
}

# Options event part 2
country_event = {
	id = blackjack.17
	title = blackjack.17.t
	desc = blackjack.17.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			# Compute optimal moves
			blackjack_player_1_optimal_move = yes
			blackjack_player_2_optimal_move = yes
			blackjack_player_3_optimal_move = yes
			blackjack_player_4_optimal_move = yes

			# DELETE THESE LOGGING LINES
			if = {
				limit = {
					blackjack_optimal_move_hit = yes
				}
				log = "Optimal move: hit"
			}
			if = {
				limit = {
					blackjack_optimal_move_stand = yes
				}
				log = "Optimal move: stand"
			}
			if = {
				limit = {
					blackjack_optimal_move_double_down = yes
				}
				log = "Optimal move: double"
			}
			if = {
				limit = {
					blackjack_optimal_move_surrender = yes
				}
				log = "Optimal move: surrender"
			}
		}
	}

	option = {
		name = "blackjack.17a"
		hidden_effect = {
			event_target:blackjack_player_1_tag = {
				if = {
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 4
						}
					}
					event_target:blackjack_player_4_tag = {
						country_event = {
							id = blackjack.15
						}
					}
				} else_if = {
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 3
						}
					}
					event_target:blackjack_player_3_tag = {
						country_event = {
							id = blackjack.15
						}
					}
				} else_if = {
					limit = {
						check_variable = {
							which = blackjack_turn
							value = 2
						}
					}
					event_target:blackjack_player_2_tag = {
						country_event = {
							id = blackjack.15
						}
					}
				} else = {
					event_target:blackjack_player_1_tag = {
						country_event = {
							id = blackjack.15
						}
					}
				}
			}
		}
	}
}

# Dealer processing event. because eu4 seems to hate triggers and ive just given up at this point
country_event = {
	id = blackjack.18
	title = blackjack.18.t
	desc = blackjack.18.d
	picture = blackjack_eventPicture

	hidden = yes

	is_triggered_only = yes

	option = {
		name = "blackjack.18a"
		hidden_effect = {
			# Set win screen flag first
			set_global_flag = blackjack_win_screen_flag

			event_target:blackjack_player_1_tag = {
				# Get blackjack value
				blackjack_get_hand_value_dealer = yes
				
				# Check if dealer has blackjack
				if = {
					limit = {
						blackjack_dealer_has_blackjack = yes
					}
					change_variable = {
						which = blackjack_dealer_status
						value = 4
					}
				}
				# Else In a while loop, till the dealer reaches 17
				else = {
					while = {
						limit = {
							NOT = {
								check_variable = {
									which = blackjack_dealer_hand_value
									value = 17
								}
							}
						}
						
						# Get new dealer card
						blackjack_play_and_inc = yes 
						blackjack_dealer_play_card = yes
						change_variable = {
							which = blackjack_dealer_position
							value = 1
						}

						# Get new dealer value
						blackjack_get_hand_value_dealer = yes
					}
					# Set dealer to stood or busted accordingly
					if = {
						limit = {
							check_variable = {
								which = blackjack_dealer_hand_value
								value = 22
							}
						}
						set_variable = {
							which = blackjack_dealer_status
							value = 2
						}
					} else = {
						set_variable = {
							which = blackjack_dealer_status
							value = 1
						}
					}
				}

				# Now that we have dealer status, evaluate which players win and which lose

				# Initialize winning variables to 0 (default for surrender which is never checked again)
				set_variable = {
					which = blackjack_player_1_win_status
					value = 0
				}
				set_variable = {
					which = blackjack_player_2_win_status
					value = 0
				}
				set_variable = {
					which = blackjack_player_3_win_status
					value = 0
				}
				set_variable = {
					which = blackjack_player_4_win_status
					value = 0
				}

				# Case 1: dealer has blackjack
				if = {
					limit = {
						check_variable = {
							which = blackjack_dealer_status
							value = 4
						}
					}
					# player also has blackjack - push
					# otherwise, loss (no change, 0 is default)
					if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_status
								value = 4 
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 1
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_status
								value = 4 
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 1
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_status
								value = 4 
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 1
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_status
								value = 4 
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 1
						}
					}
				}

				# Case 2: dealer busts
				else_if = {
					limit = {
						check_variable = {
							which = blackjack_dealer_status
							value = 2
						}
					}
					# player also busts - lose
					# player surrenders - lose
					# player has blackjack - win with blackjack
					# otherwise, win

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_status
								value = 2
							}
							NOT = {
								check_variable = {
									which = blackjack_player_1_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 0
						}
					} else = {
						set_variable = {
							which = blackjack_player_1_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_status
								value = 2
							}
							NOT = {
								check_variable = {
									which = blackjack_player_2_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 0
						}
					} else = {
						set_variable = {
							which = blackjack_player_2_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_status
								value = 2
							}
							NOT = {
								check_variable = {
									which = blackjack_player_3_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 0
						}
					} else = {
						set_variable = {
							which = blackjack_player_3_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_status
								value = 2
							}
							NOT = {
								check_variable = {
									which = blackjack_player_4_status
									value = 4
								}
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 0
						}
					} else = {
						set_variable = {
							which = blackjack_player_4_win_status
							value = 2
						}
					}
				}
				
				# Case 3: dealer stands between 17-21
				else = {
					# player has blackjack - win with blackjack
					# player has the same value as dealer - push
					# player has larger value than dealer - win
					# otherwise - lose (no change, 0 is default)

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_status
								value = 2
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 0
						}
					} else_if = {
						limit = {
							# a >= b ^ b >= a <-> a == b
							AND = {
								check_variable = {
									which = blackjack_player_1_hand_value
									which = blackjack_dealer_hand_value
								}
								check_variable = {
									which = blackjack_dealer_hand_value
									which = blackjack_player_1_hand_value
								}
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 1
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_1_hand_value
								which = blackjack_dealer_hand_value
							}
						}
						set_variable = {
							which = blackjack_player_1_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_status
								value = 2
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 0
						}
					} else_if = {
						limit = {
							# a >= b ^ b >= a <-> a == b
							AND = {
								check_variable = {
									which = blackjack_player_2_hand_value
									which = blackjack_dealer_hand_value
								}
								check_variable = {
									which = blackjack_dealer_hand_value
									which = blackjack_player_2_hand_value
								}
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 1
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_2_hand_value
								which = blackjack_dealer_hand_value
							}
						}
						set_variable = {
							which = blackjack_player_2_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_status
								value = 2
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 0
						}
					} else_if = {
						limit = {
							# a >= b ^ b >= a <-> a == b
							AND = {
								check_variable = {
									which = blackjack_player_3_hand_value
									which = blackjack_dealer_hand_value
								}
								check_variable = {
									which = blackjack_dealer_hand_value
									which = blackjack_player_3_hand_value
								}
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 1
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_3_hand_value
								which = blackjack_dealer_hand_value
							}
						}
						set_variable = {
							which = blackjack_player_3_win_status
							value = 2
						}
					}

					if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_status
								value = 4
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 3
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_status
								value = 2
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 0
						}
					} else_if = {
						limit = {
							# a >= b ^ b >= a <-> a == b
							AND = {
								check_variable = {
									which = blackjack_player_4_hand_value
									which = blackjack_dealer_hand_value
								}
								check_variable = {
									which = blackjack_dealer_hand_value
									which = blackjack_player_4_hand_value
								}
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 1
						}
					} else_if = {
						limit = {
							check_variable = {
								which = blackjack_player_4_hand_value
								which = blackjack_dealer_hand_value
							}
						}
						set_variable = {
							which = blackjack_player_4_win_status
							value = 2
						}
					}
				}

				# If winning variable is win with blackjack, multiply the bet by 3 then divide by 2
				if = {
					limit = {
						check_variable = {
							which = blackjack_player_1_win_status
							value = 3 
						}
					}
					# 3:2 payout
					multiply_variable = {
						which = bet_value_p1
						value = 3
					}
					divide_variable = {
						which = bet_value_p1
						value = 2
					}
				}

				if = {
					limit = {
						check_variable = {
							which = blackjack_player_2_win_status
							value = 3 
						}
					}
					# 3:2 payout
					multiply_variable = {
						which = bet_value_p2
						value = 3
					}
					divide_variable = {
						which = bet_value_p2
						value = 2
					}
				}

				if = {
					limit = {
						check_variable = {
							which = blackjack_player_3_win_status
							value = 3 
						}
					}
					# 3:2 payout
					multiply_variable = {
						which = bet_value_p3
						value = 3
					}
					divide_variable = {
						which = bet_value_p3
						value = 2
					}
				}

				if = {
					limit = {
						check_variable = {
							which = blackjack_player_4_win_status
							value = 3 
						}
					}
					# 3:2 payout
					multiply_variable = {
						which = bet_value_p4
						value = 3
					}
					divide_variable = {
						which = bet_value_p4
						value = 2
					}
				}

				# Process win / loss
				if = {
					# Status of 2 (win) or 3 (3:2 win)
					limit = {
						check_variable = {
							which = blackjack_player_1_win_status
							value = 2
						}
					}
					blackjack_payout_p1_w = yes

					# Update balance variable
					change_variable = {
						which = blackjack_table_balance_player_1
						which = bet_value_p1
					}
				} else_if = {
					# Status of 0 (loss)
					limit = {
						NOT = {
							check_variable = {
								which = blackjack_player_1_win_status
								value = 1
							}
						}
					}
					blackjack_payout_p1_l = yes

					# Update balance variable
					subtract_variable = {
						which = blackjack_table_balance_player_1
						which = bet_value_p1
					}
				}
				if = {
					# Status of 2 (win) or 3 (3:2 win)
					limit = {
						check_variable = {
							which = blackjack_player_2_win_status
							value = 2
						}
					}
					blackjack_payout_p2_w = yes

					# Update balance variable
					change_variable = {
						which = blackjack_table_balance_player_2
						which = bet_value_p2
					}
				} else_if = {
					# Status of 0 (loss)
					limit = {
						NOT = {
							check_variable = {
								which = blackjack_player_2_win_status
								value = 1
							}
						}
					}
					blackjack_payout_p2_l = yes

					# Update balance variable
					subtract_variable = {
						which = blackjack_table_balance_player_2
						which = bet_value_p2
					}
				}
				if = {
					# Status of 2 (win) or 3 (3:2 win)
					limit = {
						check_variable = {
							which = blackjack_player_3_win_status
							value = 2
						}
					}
					blackjack_payout_p3_w = yes

					# Update balance variable
					change_variable = {
						which = blackjack_table_balance_player_3
						which = bet_value_p3
					}
				} else_if = {
					# Status of 0 (loss)
					limit = {
						NOT = {
							check_variable = {
								which = blackjack_player_3_win_status
								value = 1
							}
						}
					}
					blackjack_payout_p3_l = yes

					# Update balance variable
					subtract_variable = {
						which = blackjack_table_balance_player_3
						which = bet_value_p3
					}
				}
				if = {
					# Status of 2 (win) or 3 (3:2 win)
					limit = {
						check_variable = {
							which = blackjack_player_4_win_status
							value = 2
						}
					}
					blackjack_payout_p4_w = yes

					# Update balance variable
					change_variable = {
						which = blackjack_table_balance_player_4
						which = bet_value_p4
					}
				} else_if = {
					# Status of 0 (loss)
					limit = {
						NOT = {
							check_variable = {
								which = blackjack_player_4_win_status
								value = 1
							}
						}
					}
					blackjack_payout_p4_l = yes

					# Update balance variable
					subtract_variable = {
						which = blackjack_table_balance_player_4
						which = bet_value_p4
					}
				}
				
				# Clear game in progress flag, for the refresh decision
				clr_global_flag = blackjack_game_in_progress_flag

				# Then show the game screen (which is now the win screen because of the blackjack_win_screen_flag flag)
				event_target:blackjack_player_1_tag = {
					country_event = {
						id = blackjack.25
					}
				}
				event_target:blackjack_player_2_tag = {
					if = {
						limit = {
							ai = yes
						}
						set_country_flag = blackjack_play_again_flag
					}
					country_event = {
						id = blackjack.25
					}
				}
				event_target:blackjack_player_3_tag = {
					if = {
						limit = {
							ai = yes
						}
						set_country_flag = blackjack_play_again_flag
					}
					country_event = {
						id = blackjack.25
					}
				}
				event_target:blackjack_player_4_tag = {
					if = {
						limit = {
							ai = yes
						}
						set_country_flag = blackjack_play_again_flag
					}
					country_event = {
						id = blackjack.25
					}
				}
			}
		}
	}
}

# End screen event
# country_event = {
# 	id = blackjack.19
# 	title = blackjack.19.t
# 	desc = blackjack.19.d
# 	picture = blackjack_eventPicture

# 	is_triggered_only = yes

# 	# Keep playing at this table
# 	# Everyone has to pick this in order to keep playing
# 	# AI will always do this. gambling addiction :)
# 	option = {
# 		name = "blackjack.18a"
# 		hidden_effect = {
# 			set_country_flag = blackjack_play_again_flag
# 			if = {
# 				limit = {
# 					AND = {
# 						event_target:blackjack_player_1_tag = {
# 							has_country_flag = blackjack_play_again_flag
# 						}
# 						event_target:blackjack_player_2_tag = {
# 							has_country_flag = blackjack_play_again_flag
# 						}
# 						event_target:blackjack_player_3_tag = {
# 							has_country_flag = blackjack_play_again_flag
# 						}
# 						event_target:blackjack_player_4_tag = {
# 							has_country_flag = blackjack_play_again_flag
# 						}
# 					}
# 				}
# 				event_target:blackjack_player_1_tag = {
# 					clr_country_flag = blackjack_play_again_flag
# 				}
# 				event_target:blackjack_player_2_tag = {
# 					clr_country_flag = blackjack_play_again_flag
# 				}
# 				event_target:blackjack_player_3_tag = {
# 					clr_country_flag = blackjack_play_again_flag
# 				}
# 				event_target:blackjack_player_4_tag = {
# 					clr_country_flag = blackjack_play_again_flag
# 				}

# 				# Clear the Win Screen Flag
# 				clr_global_flag = blackjack_win_screen_flag

# 				# Start a new game
# 				# Shuffle the deck if needed else just start
# 				if = {
# 					limit = {
# 						check_variable = {
# 							which = blackjack_current_deck_position
# 							value = 105 
# 						}
# 					}
# 					set_variable = {
# 						which = blackjack_current_deck_position
# 						value = 0
# 					}
# 					blackjack_shuffle_deck_wrapper = yes
# 				} else = {
# 					blackjack_setup_game_flags_two = yes
# 				}
# 			}
# 		}
# 		ai_chance = {
# 			factor = 100
# 		}
# 	}

# 	# Dont want to play another game
# 	# This ends the game for everyone
# 	option = {
# 		name = "blackjack.19b"
# 		ai_chance = {
# 			factor = 0
# 		}
# 		hidden_effect = {
# 			# Clear globals
# 			event_target:blackjack_player_1_tag = {
# 				clr_country_flag = blackjack_is_player
# 				clr_country_flag = blackjack_not_playing
# 				clr_country_flag = blackjack_play_again_flag
# 			}
# 			event_target:blackjack_player_2_tag = {
# 				clr_country_flag = blackjack_is_player
# 				clr_country_flag = blackjack_not_playing
# 				clr_country_flag = blackjack_play_again_flag
# 			}
# 			event_target:blackjack_player_3_tag = {
# 				clr_country_flag = blackjack_is_player
# 				clr_country_flag = blackjack_not_playing
# 				clr_country_flag = blackjack_play_again_flag
# 			}
# 			event_target:blackjack_player_4_tag = {
# 				clr_country_flag = blackjack_is_player
# 				clr_country_flag = blackjack_not_playing
# 				clr_country_flag = blackjack_play_again_flag
# 			}
# 			clear_global_event_target = blackjack_player_1_tag
# 			clear_global_event_target = blackjack_player_2_tag
# 			clear_global_event_target = blackjack_player_3_tag
# 			clear_global_event_target = blackjack_player_4_tag
# 			clr_global_flag = blackjack_table_playing
# 		}
# 	}
# }

# Tutorial event
country_event = {
	id = blackjack.20
	title = blackjack.20.t
	desc = blackjack.20.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Next tutorial
	option = {
		name = "blackjack.20a"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.21
				}
			}
		}
	}
	# Exit
	option = {
		name = "blackjack.20b"
		hidden_effect = {
			clr_country_flag = blackjack_viewing_tutorial
		}
	}
}

country_event = {
	id = blackjack.21
	title = blackjack.21.t
	desc = blackjack.21.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Next tutorial
	option = {
		name = "blackjack.21a"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.22
				}
			}
		}
	}

	# Previous tutorial
	option = {
		name = "blackjack.21c"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.20
				}
			}
		}
	}

	# Exit
	option = {
		name = "blackjack.21b"
		hidden_effect = {
			clr_country_flag = blackjack_viewing_tutorial
		}
	}
}

country_event = {
	id = blackjack.22
	title = blackjack.22.t
	desc = blackjack.22.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Next tutorial
	option = {
		name = "blackjack.22a"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.23
				}
			}
		}
	}

	# Previous tutorial
	option = {
		name = "blackjack.22c"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.21
				}
			}
		}
	}

	# Exit
	option = {
		name = "blackjack.22b"
		hidden_effect = {
			clr_country_flag = blackjack_viewing_tutorial
		}
	}
}

country_event = {
	id = blackjack.23
	title = blackjack.23.t
	desc = blackjack.23.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Next tutorial
	option = {
		name = "blackjack.23a"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.24
				}
			}
		}
	}

	# Previous tutorial
	option = {
		name = "blackjack.23c"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.22
				}
			}
		}
	}

	# Exit
	option = {
		name = "blackjack.23b"
		hidden_effect = {
			clr_country_flag = blackjack_viewing_tutorial
		}
	}
}

country_event = {
	id = blackjack.24
	title = blackjack.24.t
	desc = blackjack.24.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	# Previous tutorial
	option = {
		name = "blackjack.23c"
		hidden_effect = {
			ROOT = {
				country_event = {
					id = blackjack.23
				}
			}
		}
	}

	# Exit
	option = {
		name = "blackjack.24a"
		hidden_effect = {
			clr_country_flag = blackjack_viewing_tutorial
		}
	}
}

# Game over, refresh the screen for the win screen
country_event = {
	id = blackjack.25
	title = blackjack.25.t
	desc = blackjack.25.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.25a"
	}
}

# A player has left the table, start a new game if you want to keep playing
country_event = {
	id = blackjack.26
	title = blackjack.26.t
	desc = blackjack.26.d
	picture = blackjack_eventPicture

	is_triggered_only = yes

	option = {
		name = "blackjack.26a"
	}
}